import * as esbuild from 'esbuild'
import { builtinModules } from 'node:module'

const prod = Deno.args[0] === 'prod'
const smap = prod ? false : 'inline'

const context = await esbuild.context({
  bundle: true,
  treeShaking: true,
  minify: prod,
  sourcemap: smap,
  format: 'cjs',
  target: 'esnext',
  logLevel: 'info',
  entryPoints: ['./src/main.ts'],
  outfile: './dist/main.js',
  banner: {
    js: `/**
 * THIS IS A GENERATED/BUNDLED FILE BY ESBUILD: https://github.com/evanw/esbuild
 * BUNDLED AT: ${new Date().toISOString()}
 */`,
  },
  external: [
    'obsidian',
    'electron',
    '@codemirror/autocomplete',
    '@codemirror/collab',
    '@codemirror/commands',
    '@codemirror/language',
    '@codemirror/lint',
    '@codemirror/search',
    '@codemirror/state',
    '@codemirror/view',
    '@lezer/common',
    '@lezer/highlight',
    '@lezer/lr',
    ...builtinModules,
  ],
})

if (prod) {
  await context.rebuild()
  await context.dispose()
  Deno.exit(0)
} else {
  await context.watch()
}
